name: Deploy

on:
  workflow_dispatch:
    inputs:
      aws-account:
        required: true
        type: choice
        description: 'AWS Account'
        options:
          - dev
      aws-region:
        required: true
        type: choice
        description: 'AWS Region'
        options:
          - us-west-1
          - us-west-2
      deployment-stage:
        required: true
        type: choice
        description: 'Deployment Stage'
        options:
          - networking
      stack-id-fragment:
        required: true
        type: string
        description: 'Stack Identifier'
      code-version-ref:
        required: false
        type: string
        description: 'Optional: Git Commit Ref'

permissions:
  id-token: write      # Required for OIDC
  contents: read       # To clone the repo

jobs:
  display-inputs:
    runs-on: [ubuntu-latest]
    steps:
      - name: Display inputs
        run: |
          echo "inputs = ${{ toJson(inputs) }}"

  deploy:
    runs-on: [ubuntu-latest]

    steps:
      - name: Checkout working directory
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.code-version-ref }}

      - id: set-common-vars
        name: Set Common Variables
        uses: ./.github/actions/common-vars
        with:
          code-version-ref: ${{ inputs.code-version-ref }}

      - name: CDK synth
        uses: ./.github/actions/cdk-synth
        with:
          code-version-ref: ${{ steps.set-common-vars.outputs.code-version-ref }}
          code-version-hash: ${{ steps.set-common-vars.outputs.code-version-hash }}
          stack-id-fragment: ${{ inputs.stack-id-fragment }}
          gha-role-arn: ${{ steps.set-common-vars.outputs.gha-role-arn }}

      - name: CDK deploy
        working-directory: ./infrastructure
        run: |
          stackname="${{ inputs.aws-account }}-${{ inputs.aws-region }}/${{ inputs.deployment-stage }}/*"
          npx cdk --app cdk.out --require-approval never deploy $stackname
